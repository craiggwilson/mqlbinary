grammar mql;

start:
    INT32 (TYPE_DOCUMENT CSTRING INT32 stage NUL_BYTE)+ NUL_BYTE
;

stage:
    stage_limit
|   stage_skip
;

stage_limit:
    TYPE_DOUBLE STAGE_LIMIT DOUBLE
|   TYPE_INT32 STAGE_LIMIT INT32
|   TYPE_INT64 STAGE_LIMIT INT64
|   TYPE_DECIMAL STAGE_LIMIT DECIMAL
;

stage_skip:
    TYPE_DOUBLE STAGE_SKIP DOUBLE
|   TYPE_INT32 STAGE_SKIP INT32
|   TYPE_INT64 STAGE_SKIP INT64
|   TYPE_DECIMAL STAGE_SKIP DECIMAL
;


// STAGE NAMES
STAGE_LIMIT: '$limit';
STAGE_SKIP: '$skip';

// TYPES
TYPE_ARRAY: '\u0004';
TYPE_DECIMAL: '\u0013';
TYPE_DOCUMENT: '\u0003';
TYPE_DOUBLE: '\u0001';
TYPE_INT32: '\u0010';
TYPE_INT64: '\u0012';
TYPE_NUMBER: TYPE_DOUBLE | TYPE_INT32 | TYPE_INT64 | TYPE_DECIMAL;

// TYPES
CSTRING: BYTE* NUL_BYTE;
DECIMAL: INT64 INT64;
DOUBLE: INT64;
INT32: BYTE BYTE BYTE BYTE;
INT64: INT32 INT32;

BYTE : '\u0000'..'\u00FF';
NUL_BYTE: '\u0000';